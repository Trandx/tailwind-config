name: Publish Updated Packages

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: https://registry.npmjs.com

      - name: Set up pnpm
        run: npm install -g pnpm@latest

      # - name: Install jq
      #   run: sudo apt-get install -y jq  # Install jq on the runner

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      # - name: Configure npm authentication
      #   run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      # - name: Get changed packages
      #   id: changed-packages
      #   run: |
      #     pnpm changeset status --output=changed-packages.json
      #     CHANGED_PACKAGES=$(jq -r '.releases[].name' changed-packages.json | tr '\n' ' ' || echo "")
      #     CHANGED_PACKAGES=$(echo "$CHANGED_PACKAGES" | xargs)
      #     if [ -z "$CHANGED_PACKAGES" ]; then
      #       echo "No packages to be bumped."
      #     else
      #       echo "CHANGED_PACKAGES=$CHANGED_PACKAGES" >> $GITHUB_ENV
      #     fi

      - name: Add changesets
        run: npx changeset add --empty

      # - name: Version packages
      #   run: pnpm changeset version

      # - name: Build updated packages
      #   if: env.CHANGED_PACKAGES != ''
      #   run: |

      #     #start build other packages
      #     for package in $CHANGED_PACKAGES; do
      #       if [ "$package" != '@trandx/round-to' ]; then
      #         pnpm --filter "$package" build
      #       fi
      #     done

      - name: start build
        #start build other packages
        run: pnpm recursive run build

      - name: Publish updated packages
        # if: env.CHANGED_PACKAGES != ''
        run: npx changeset publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
